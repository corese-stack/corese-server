#
# Query definitions for a SPARQL tutorial based on a transformation
# To be used with /tutorial/rdf?profile=st:web
#
# Olivier Corby - Wimmics Inria I3S - 2017
#

@prefix db:  <http://fr.dbpedia.org/resource/>

  
us:hal a sw:Workflow ;

sw:display true;
sw:debug true;
sw:collect true;

sw:body (

[ a sw:Query ;
st:name st:intro ;
rdfs:label "Introduction" ;

rdfs:comment """Choisissez une requête dans le sélecteur. 'Previous' et 'Next' permettent de naviguer dans les requêtes successives.
Une question est alors posée avec un canevas de réponse à compléter. En cliquant sur 'Solution', on obtient la réponse attendue, en cliquant sur 'Template', le canevas réapparaît. 'Submit' soumet la requête SPARQL au serveur. """@fr ;

rdfs:comment """Choose a query in the selector. 'Previous' and 'Next' enable user to navigate in queries. When a query is selected, a query pattern is shown in the text area. 'Solution' displays the solution, 'Template' displays the query template. 'Submit' submits the SPARQL query to the server."""@en ;

st:query ""
]







[ a sw:Query ;
st:name st:member ;
rdfs:label "SPARKS Member" ;
rdfs:comment "SPARKS."@fr ;
rdfs:comment "Members of SPARKS"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
@federate <https://data.archives-ouvertes.fr/sparql>
construct  {
    ?x skos:altLabel "SPARKS" .
    ?p hsc:structure ?x .
    ?p foaf:name ?n
}
where {
    ?x skos:altLabel "SPARKS" .
    ?s hsc:structure ?x .
    ?s hsc:person ?p .
    ?p foaf:name ?n
}
""" 
]






[ a sw:Query ;
st:name st:coauthorsparks ;
rdfs:label "SPARKS Coauthor" ;
rdfs:comment "SPARKS Coauthor."@fr ;
rdfs:comment "SPARKS Coauthor"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix de:  <http://purl.org/dc/elements/1.1/> 
construct {
    ?n dc:coauthor ?n2
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
select distinct ?n ?n2 where {
    ?x skos:altLabel ?l
    filter (?l in ("SPARKS", "WIMMICS")) .

    ?s hsc:structure ?x .
    ?s hsc:person ?p .
    ?p foaf:name ?n

    ?s2 hsc:structure ?x .
    ?s2 hsc:person ?p2 .
    ?p2 foaf:name ?n2

    filter (?n != ?n2)

    ?doc dc:creator ?s
    ?doc dc:creator ?s2
    #?doc de:subject ?topic
    ?doc dc:title ?title
}
}
}

""" 
]



[ a sw:Query ;
st:name st:topicsparks ;
rdfs:label "SPARKS Topic" ;
rdfs:comment "SPARKS Topic."@fr ;
rdfs:comment "Members of SPARKS and Wimmics linked by topics"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix de:  <http://purl.org/dc/elements/1.1/> 
prefix fab: <http://purl.org/spar/fabio/>
construct {
    ?n us:interestedIn ?topic 
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
    select distinct ?n ?topic where {
    ?x skos:altLabel ?l
        filter (?l in ("SPARKS", "WIMMICS")) .

        ?s hsc:structure ?x .
        ?s hsc:person ?p .
        ?p foaf:name ?n
    
        ?doc1 dc:creator ?s
        ?doc1 de:subject ?topic 
        filter langMatches(lang(?topic), "en")
    }
}
    bind (st:setgroup(?n, "other") as ?tmp)
    bind (st:setclass(?n, "other") as ?a)
    bind (st:setclass(?topic, "main") as ?b)
}
""" 
]



[ a sw:Query ;
st:name st:topici3s ;
rdfs:label "I3S Topic" ;
rdfs:comment "I3S Topic."@fr ;
rdfs:comment "Members of I3S linked by topics"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix de:  <http://purl.org/dc/elements/1.1/> 
construct {
    ?n us:interestedIn ?topic 
    ?n us:memberOf ?name
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
    select distinct ?n ?topic ?name where {
    ?sam skos:altLabel "I3S"
    ?x org:unitOf ?sam ; skos:altLabel ?name

    ?s hsc:structure ?x .
    ?s hsc:person ?p .
    ?p foaf:name ?n

    ?doc1 dc:creator ?s
    ?doc1 de:subject ?topic 
    filter langMatches(lang(?topic), "en")
    #filter regex(?topic, "Intelligence")
}
}

    bind (st:setgroup(?n, "other")     as ?a)
    bind (st:setgroup(?topic, "other") as ?b)
    
    bind (st:setclass(?topic, "main")   as ?c)
    bind (st:setclass(?name,  "other")  as ?d)        
}
""" 
]




[ a sw:Query ;
st:name st:topicsam ;
rdfs:label "Inria Topic" ;
rdfs:comment "Inria Topic."@fr ;
rdfs:comment "Members of Inria Sophia Antipolis linked by topics"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix de:  <http://purl.org/dc/elements/1.1/> 
construct {
    ?n us:interestedIn ?topic 
    ?n us:memberOf ?name
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
    select distinct ?n ?topic ?name where {
    ?sam skos:altLabel "CRISAM"
    ?x org:unitOf ?sam ; skos:altLabel ?name

    ?s hsc:structure ?x .
    ?s hsc:person ?p .
    ?p foaf:name ?n

    ?doc1 dc:creator ?s
    ?doc1 de:subject ?topic 
    filter regex(?topic, "Intelligence")
}}

    bind (st:setgroup(?n, "other")     as ?a)
    bind (st:setgroup(?topic, "other") as ?b)
    
    bind (st:setclass(?topic, "main")   as ?c)
    bind (st:setclass(?name,  "other")  as ?d)   
}
""" 
]


[ a sw:Query ;
st:name st:confsam ;
rdfs:label "Inria Conf" ;
rdfs:comment "Inria Conf."@fr ;
rdfs:comment "Members of Inria Sophia Antipolis publishing in AI conference"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix de:  <http://purl.org/dc/elements/1.1/> 
construct {
    #?u1 us:interestedIn ?source 
    ?n us:memberOf ?name
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
    select distinct ?n ?name where {
    ?sam skos:altLabel "CRISAM"
    ?x org:unitOf ?sam ; skos:altLabel ?name

    ?s hsc:structure ?x .
    ?s hsc:person ?p .
    ?p foaf:name ?n

    ?doc1 dc:creator ?s
    ?doc1 dc:source ?source 
    filter regex(?source, "Artificial Intelligence")
}}

    bind (st:setgroup(?n, "other") as ?tmp)
    bind (st:setclass(?n, "main")   as ?c)
    bind (st:setclass(?name,  "other")  as ?d)   
}
""" 
]







[ a sw:Query ;
st:name st:unitof ;
rdfs:label "Unit of Lab" ;
rdfs:comment "Unit of Lab."@fr ;
rdfs:comment "Unit of Lab"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix de:  <http://purl.org/dc/elements/1.1/> 
@federate <https://data.archives-ouvertes.fr/sparql>
construct {
    ?x skos:altLabel ?name
    ?x org:unitOf ?lab
}
where {
    ?sam skos:altLabel "Inria" , ?lab
    ?x org:unitOf ?sam ; skos:altLabel ?name
}

""" 
]



[ a sw:Query ;
st:name st:memberlab ;
rdfs:label "Member  Lab" ;
rdfs:comment "Member Lab."@fr ;
rdfs:comment "Member Lab"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
prefix lab: <http://www.unice.fr/other/>
prefix inr: <http://ns.inria.fr/sparql-extension/user/>
@federate <https://data.archives-ouvertes.fr/sparql>
construct {
    ?u1 us:memberOf ?name
}
where {
    ?p foaf:name "Olivier Corby" 
    ?s hsc:person ?p .
    ?s hsc:structure ?lab .    
    ?lab skos:altLabel ?name
 
    bind (uri(concat(str(inr:), ?n))  as ?u1)
}
""" 
]


[ a sw:Query ;
st:name st:coauthornetwork ;
rdfs:label "Coauthor network" ;
rdfs:comment "Coauthor network."@fr ;
rdfs:comment "Coauthor network"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
construct {
    ?n dc:coauthor ?n2
    ?n us:memberOf ?name
    ?n2 us:memberOf ?name2
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
select distinct ?n ?n2 ?name ?name2 where {
    values ?n {  "Olivier Corby"  }
    ?p foaf:name ?n
    ?s hsc:person ?p .
    ?s hsc:structure ?x .
    ?x org:unitOf ?sam ; skos:altLabel ?name

    ?doc dc:creator ?s
    ?doc dc:creator ?s2    
    filter (?s != ?s2)
    
    ?s2 hsc:structure ?y .
    ?y org:unitOf ?lab ; skos:altLabel ?name2
    ?s2 hsc:person ?p2 .
    ?p2 foaf:name ?n2
   
   
}
}
    bind (st:setgroup(?n, "other") as ?tmp) 
    bind (st:setgroup(?n2, "other") as ?tmp2) 
    
    bind (st:setclass(?n, "main")       as ?a)
    bind (st:setclass(?n2, "main")      as ?b)
    bind (st:setclass(?name,  "other")  as ?c)    
    bind (st:setclass(?name2,  "other")  as ?d)    

}
""" 
]


[ a sw:Query ;
st:name st:coauthornetworkcount ;
rdfs:label "Coauthor network count" ;
rdfs:comment "Coauthor network count."@fr ;
rdfs:comment "Coauthor network count"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
construct {
    graph ?count { ?sn dc:coauthor ?sn2 }
    ?sn us:memberOf ?sname
    ?sn2 us:memberOf ?sname2
}
where {
service <https://data.archives-ouvertes.fr/sparql> {

    select ?n2 (count(distinct ?doc) as ?count)
        (sample(?n) as ?sn) 
        (sample(?name) as ?sname) (sample(?name2) as ?sname2)
    where {
        values ?n {  "Olivier Corby"  }
        ?p foaf:name ?n
        ?s hsc:person ?p .
        ?s hsc:structure ?x .
        ?x org:unitOf ?sam ; skos:altLabel ?name

        ?doc dc:creator ?s
        ?doc dc:creator ?s2    
        filter (?s != ?s2)
        
        ?s2 hsc:structure ?y .
        ?y org:unitOf ?lab ; skos:altLabel ?name2
        ?s2 hsc:person ?p2 .
        ?p2 foaf:name ?n2
    }
    group by ?n2
}
    bind (concat(?n2, ":", ?count) as ?sn2) 
    
    bind (st:setgroup(?sn, "other") as ?tmp) 
    bind (st:setgroup(?sn2, "other") as ?tmp2) 
    
    bind (st:setclass(?sn, "main")       as ?a)
    bind (st:setclass(?sn2, "main")      as ?b)
    bind (st:setclass(?sname,  "other")  as ?c)    
    bind (st:setclass(?sname2,  "other")  as ?d)   
    
    bind (st:setclass(?count, us:edgeClass(?count)) as ?e)

}

function us:edgeClass(?c) {
    if (?c = 1,   "tiny", 
    if (?c <= 5,  "small", 
    if (?c <= 10, "medium", 
    if (?c <= 20, "high", "huge"))))
}
""" 
]



[ a sw:Query ;
st:name st:coauthorinria ;
rdfs:label "INRIA Coauthor" ;
rdfs:comment "INRIA Coauthor."@fr ;
rdfs:comment "INRIA Sophia coauthors, member of the same team"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
construct {
    ?n dc:coauthor ?n2
    ?n us:memberOf ?name
    ?n2 us:memberOf ?name
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
select distinct ?n ?n2 ?name where {
    ?sam skos:altLabel "CRISAM"
    ?x org:unitOf ?sam ; skos:altLabel ?name

    ?s hsc:structure ?x .
    ?s hsc:person ?p .
    ?p foaf:name ?n

    ?s2 hsc:structure ?x .
    ?s2 hsc:person ?p2 .
    ?p2 foaf:name ?n2

    filter (?n < ?n2)

    ?doc dc:creator ?s
    ?doc dc:creator ?s2
    ?doc dc:issued ?date 
    filter (?date >= "2015-01-01"^^xsd:date && ?date <= "2016-12-31"^^xsd:date)
}
}
    bind (st:setgroup(?n, "other") as ?tmp) 
    bind (st:setgroup(?n2, "other") as ?tmp2) 
    
    bind (st:setclass(?n, "main")       as ?a)
    bind (st:setclass(?n2, "main")      as ?b)
    bind (st:setclass(?name,  "other")  as ?c)    

}
""" 
]



[ a sw:Query ;
st:name st:coauthorlab ;
rdfs:label "Coauthor with other Lab" ;
rdfs:comment "Coauthor with other Lab."@fr ;
rdfs:comment "Coauthor with other Lab"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
prefix lab: <http://www.unice.fr/other/>
prefix inr: <http://ns.inria.fr/sparql-extension/user/>
construct {
    ?name  dc:coauthor ?ll
}
where {

bind (st:get(st:param) as ?lab)

service <https://data.archives-ouvertes.fr/sparql> {
select distinct ?n ?n2 ?name ?ll ?lab where {
    ?sam skos:altLabel ?lab
    ?x org:unitOf ?sam ; skos:altLabel ?name
    ?s hsc:structure ?x .
    
    ?doc dc:creator ?s .
    ?doc dc:creator ?s2 .    
    filter (?s != ?s2)
    ?doc dc:issued ?date 
    filter (?date >= "2015-01-01"^^xsd:date)
   
    ?s2 hsc:structure ?y 
    filter (?x != ?y)
    filter not exists { ?y org:unitOf ?sam }
    ?y skos:altLabel ?ll 
    #filter regex(?ll, "I3S")
} limit 2500
}
    bind (st:setgroup(?name, "other") as ?tmp) 
    bind (st:setgroup(?ll,  st:main) as ?tmp2) 
    
    bind (st:setclass(?name, "other") as ?b) 
    bind (st:setclass(?ll, "main") as ?c2) 
    
}
""" ;

st:select [
    st:name "param" ; 
    st:uri st:param ;
    st:value ("CRISAM" "I3S" "UCA" "JAD" "INRA" "ITER" "IPMC")
]
]




[ a sw:Query ;
st:name st:coauthorcountry ;
rdfs:label "Coauthor with countries" ;
rdfs:comment "Coauthor with countries."@fr ;
rdfs:comment "Coauthor with countries"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
prefix lab: <http://www.unice.fr/other/>
prefix inr: <http://ns.inria.fr/sparql-extension/user/>
prefix vs:  <http://www.w3.org/2006/vcard/ns#>
prefix db:  <http://fr.dbpedia.org/resource/>
prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
@event
construct {
    ?n us:cooperate ?name   
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
select distinct ?n ?country ?cc where {
    ?sam skos:altLabel "I3S"
    ?x org:unitOf* ?sam ; skos:altLabel ?n
    ?s hsc:structure ?x .
    
    ?doc dc:creator ?s .
    ?doc dc:creator ?s2 .  
    ?doc dc:issued ?date 
    filter (?date >= "2015-01-01"^^xsd:date)
    filter (?s != ?s2)
   
    ?s2 hsc:structure ?y 
    ?y vs:country-name ?country  
    filter (?country != db:France)
    
    bind (uri(replace(str(?country), " ", "_")) as ?cc)    
}}

service <http://fr.dbpedia.org/sparql> {
    select * where {
        ?cc rdfs:label ?name 
        filter langMatches(lang(?name), "en")
        optional { ?cc geo:lat ?lat ; geo:long ?lon }
    } 
}

    bind (st:setclass(?name, "main") as ?a) 
    bind (st:setclass(?n, "other")   as ?b) 

    bind (st:setgroup(?name, "country") as ?c) 
    bind (st:setgroup(?n, "team")       as ?d) 
}

#
# Record country location in a list of (country lat lon)
# List of location can be retrieved with st:get(st:location)
#
@after
function us:after(?map) {
    st:location(?map)
}

""" 
]




[ a sw:Query ;
st:name st:coauthorcontinent ;
rdfs:label "Coauthor with countries of continent" ;
rdfs:comment "Coauthor with countries of continent."@fr ;
rdfs:comment "Coauthor with countries of continent"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
prefix lab: <http://www.unice.fr/other/>
prefix inr: <http://ns.inria.fr/sparql-extension/user/>
prefix vs:  <http://www.w3.org/2006/vcard/ns#>
prefix db:  <http://fr.dbpedia.org/resource/>
prefix dbo: <http://fr.dbpedia.org/ontology/>
prefix o:   <http://dbpedia.org/ontology/>
prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
@event
construct {
    ?n us:cooperate ?name   
}
where {

service <https://data.archives-ouvertes.fr/sparql> {
select distinct ?n ?country ?cc where {
    ?sam skos:altLabel "I3S"
    ?x org:unitOf* ?sam ; skos:altLabel ?n
    ?s hsc:structure ?x .
    
    ?doc dc:creator ?s .
    ?doc dc:creator ?s2 .  
    ?doc dc:issued ?date 
   # filter (?date >= "2015-01-01"^^xsd:date)
    filter (?s != ?s2)
   
    ?s2 hsc:structure ?y 
    ?y vs:country-name ?country  
    filter (?country != db:France)

    
    bind (uri(replace(str(?country), " ", "_")) as ?cc)    
}}

bind (st:get(st:mode) as ?continent)
graph st:geo { ?continent dbo:member ?cc } 

service <http://fr.dbpedia.org/sparql> {
    select * where {
        ?cc rdfs:label ?name 
        filter langMatches(lang(?name), "en")
        optional { ?cc geo:lat ?lat ; geo:long ?lon }
        optional { ?cc o:thumbnail ?img }
    } 
}

    bind (st:setclass(?name, "main")   as ?a) 
    bind (st:setclass(?n, "other")     as ?b)
    
    bind (st:setgroup(?name, "country")as ?c) 
    bind (st:setgroup(?n, "team")      as ?d) 
    
    bind (st:setimg(?name, ?img)       as ?e) 

}

#
# Record country location in a list of (country lat lon)
# List of location can be retrieved with st:get(st:location)
#
@after
function us:after(?map) {
       st:location(?map)
}
""" ;

st:select [
    # parameter name in service URL: &mode=value
    st:name "mode" ; 
    # parameter name in table: st:get(st:mode) = value
    st:uri st:mode ;
    st:value (
        db:All
        db:Afrique db:Afrique_du_Nord db:Afrique_continentale 
        db:Amérique db:Amérique_du_Nord db:Amérique_centrale db:Amérique_du_Sud 
        db:Asie db:Asie_centrale db:Europe db:Europe_Est db:Moyen-Orient 
    )
]

]



[ a sw:Query ;
st:name st:memberinria ;
rdfs:label "INRIA Member" ;
rdfs:comment "INRIA Member."@fr ;
rdfs:comment "INRIA Sophia member of teams"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
construct {
    ?n us:memberOf ?name
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
select distinct ?n ?name  where {
    ?sam skos:altLabel "CRISAM"
    ?x org:unitOf ?sam ; skos:altLabel ?name

    ?s hsc:structure ?x .
    ?s hsc:person ?p .
    ?p foaf:name ?n
}}

bind (st:setgroup(?n, "other") as ?tmp)
bind (st:setclass(?n, "main") as ?a)
bind (st:setclass(?name, "other") as ?b)

}
""" 
]




[ a sw:Query ;
st:name st:schema ;
rdfs:label "Schema" ;
rdfs:comment "Schema."@fr ;
rdfs:comment "Schema"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
construct {
    foaf:Person us:subjectOf ?p 
    ?q us:hasObject foaf:Person
}
where {
service <https://data.archives-ouvertes.fr/sparql> {

{select distinct ?p where {
    ?x foaf:name "Olivier Corby" ;
    ?p ?y 
}}
{select distinct ?q where {
    ?x foaf:name "Olivier Corby" 
    ?y ?q ?x 
}}

}

bind (st:setclass(?p, "main") as ?a)
bind (st:setclass(?q, "other") as ?b)

}
""" 
]


[ a sw:Query ;
st:name st:all ;
rdfs:label "All" ;
rdfs:comment "All."@fr ;
rdfs:comment "All"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
construct {
   ?x foaf:name "Olivier Corby" ;
    ?p ?y 
    ?z ?q ?x   
}
where {
service <https://data.archives-ouvertes.fr/sparql> {
    ?x foaf:name "Olivier Corby" ;
    ?p ?y 
    ?z ?q ?x 
}

bind (st:setclass(?p, "main")  as ?a)
bind (st:setclass(?q, "other") as ?b)

bind (map(us:link, xt:list(?y, ?z)) as ?c)

}

function us:link(?s) {
    if (isURI(?s)) { 
        st:setlink(?s, st:hlink(?s, st:hal)) 
    }
}
""" 
]







[ a sw:Query ;
st:name st:continent ;
rdfs:label "Continent" ;
rdfs:comment "Continent."@fr ;
rdfs:comment "Continent"@en ;

st:query 
"""prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix org: <http://www.w3.org/ns/org#>
prefix hsc: <http://data.archives-ouvertes.fr/schema/>
prefix dc:  <http://purl.org/dc/terms/>
prefix org: <http://www.w3.org/ns/org#>
prefix lab: <http://www.unice.fr/other/>
prefix inr: <http://ns.inria.fr/sparql-extension/user/>
prefix vs:  <http://www.w3.org/2006/vcard/ns#>
prefix db:  <http://fr.dbpedia.org/resource/>
prefix dbo: <http://fr.dbpedia.org/ontology/>
prefix o:   <http://dbpedia.org/ontology/>
prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
@event
construct {
    ?continent dbo:member ?country 
    ?country   dbo:capital ?city
}
where {

bind (st:get(st:mode) as ?continent)
graph st:geo { ?continent dbo:member ?country } 

service <http://fr.dbpedia.org/sparql> {
    select * where {
        ?country rdfs:label ?name 
        filter langMatches(lang(?name), "en")
        optional { ?country geo:lat ?lat ; geo:long ?lon }
        optional { ?country o:thumbnail ?img  }
        optional { ?country o:capital ?city . ?city o:thumbnail ?icon } 
    } 
}

    bind (st:setclass(?country, "main")   as ?a) 
    bind (st:setclass(?city, "other")   as ?b) 
    
    bind (st:setimg(?country, ?img) as ?c) 
    bind (st:setimg(?city, ?icon)  as ?d) 

}

#
# Record country location in a list of (country lat lon)
# List of location can be retrieved with st:get(st:location)
#
@after
function us:after(?map) {
    st:location(?map)
}
""" ;

st:select [
    # parameter name in service URL: &mode=value
    st:name "mode" ; 
    # parameter name in table: st:get(st:mode) = value
    st:uri st:mode ;
    st:value (
        db:All
        db:Afrique db:Afrique_du_Nord db:Afrique_continentale 
        db:Amérique db:Amérique_du_Nord db:Amérique_centrale db:Amérique_du_Sud 
        db:Asie db:Asie_centrale db:Europe db:Europe_Est db:Moyen-Orient 
    )
]

]






















)
.
